        lui  sp, %hi(0x10000)                    
        addi sp, sp, %lo(0x10000)               ; inicijalizacija stoga

        lui  s0, %hi(0xFFFF0F00)
        addi s0,s0,%lo(0xFFFF0F00)              ; dohvat adrese GPIO
        
        lui  x10, %hi(POL)                      
        addi x10,x10,%lo(POL)                   
        lw   x10, 0(x10)                        ; dohvat podatka s adrese 0x500

        jal  ra, PRETVORI                       ; poziv potprograma

        halt                                    ; prekid programa

PRETVORI                                        ; potprogram    

        addi sp, sp, -4                         
        sw   ra, 0(sp)                          ; spremanje konteksta

        addi a1,x0,0x0D                         ; slanje znaka 0xD => briše se ulazni registar
        jal  ra, LCDWR                          

nas     addi x5, x0, 0x64                       ; spremanje vrijednosti 100 u registar
        bge  x10, x5, obr                       ; skok na labelu obr ukoliko je broj veći ili jednak 100

        addi x5, x0, 0x5A                       ; spremanje vrijednosti 90 u registar
        bge  x10, x5, obr                       ; skok na labelu obr ukoliko je broj veći ili jednak 90

        addi x5, x0, 0x32                       ; spremanje vrijednosti 50 u registar
        bge  x10, x5, obr                       ; skok na labelu obr ukoliko je broj veći ili jednak 50

        addi x5, x0, 0x28                       ; spremanje vrijednosti 50 u registar
        bge  x10, x5, obr                       ; skok na labelu obr ukoliko je broj veći ili jednak 40

        addi x5, x0, 0xA                        ; spremanje vrijednosti 10 u registar
        bge  x10, x5, obr                       ; skok na labelu obr ukoliko je broj veći ili jednak 10

        addi x5, x0, 0x9                        ; spremanje vrijednosti 9 u registar
        bge  x10, x5, obr                       ; skok na labelu obr ukoliko je broj veći ili jednak 9

        addi x5, x0, 0x5                        ; spremanje vrijednosti 5 u registar
        bge  x10, x5, obr                       ; skok na labelu obr ukoliko je broj veći ili jednak 5

        addi x5, x0, 0x4                        ; spremanje vrijednosti 4 u registar
        bge  x10, x5, obr                       ; skok na labelu obr ukoliko je broj veći ili jednak 4

        addi x5, x0, 0x1                        ; spremanje vrijednosti 1 u registar
        bge  x10, x5, obr                       ; skok na labelu obr ukoliko je broj veći ili jednak 1

        addi a1,x0,0x0A                         ; slanje znaka 0xA => ispis znakova na zaslon
        jal  ra, LCDWR 

        lw   ra, 0(sp)                          ; obnova konteksta
        addi sp, sp, 4
        jalr x0, 0(ra)                          ; izlaz iz potprograma


obr     sub  x10, x10, x5                       ; od broja oduzmemo najvecu vrijednost koju smo primjetili 
        
        addi x7, x0, 0x64                       
        beq  x5, x7, za_C                       ; ako je broj koji smo oduzeli bio vrijednosti C, onda odi ispisati C

        addi x7, x0, 0x5A
        beq  x5, x7, za_XC                      ; ako je broj koji smo oduzeli bio vrijednosti XC, onda odi ispisati XC

        addi x7, x0, 0x32
        beq  x5, x7, za_L                       ; ako je broj koji smo oduzeli bio vrijednosti L, onda odi ispisati L

        addi x7, x0, 0x28
        beq  x5, x7, za_XL                      ; ako je broj koji smo oduzeli bio vrijednosti XL, onda odi ispisati XL

        addi x7, x0, 0xA
        beq  x5, x7, za_X                       ; ako je broj koji smo oduzeli bio vrijednosti X, onda odi ispisati X

        addi x7, x0, 0x9
        beq  x5, x7, za_IX                      ; ako je broj koji smo oduzeli bio vrijednosti IX, onda odi ispisati IX

        addi x7, x0, 0x5
        beq  x5, x7, za_V                       ; ako je broj koji smo oduzeli bio vrijednosti V, onda odi ispisati V

        addi x7, x0, 0x4
        beq  x5, x7, za_IV                      ; ako je broj koji smo oduzeli bio vrijednosti IV, onda odi ispisati IV

        addi x7, x0, 0x1
        beq  x5, x7, za_I                       ; ako je broj koji smo oduzeli bio vrijednosti I, onda odi ispisati I


za_I                                            ; za slovo I
 
        addi a1,x0,0x49                         ; pripremi ascii vrijednost za I
        jal  ra, LCDWR                          ; poziv potprograma LCDWR

        beq  x0, x0, nas                        ; vrati se odrediti daljnje vrijednosti

za_IV                                           ; za slova IV

        addi a1,x0,0x49                         ; pripremi ascii vrijednost za I
        jal  ra, LCDWR                          ; poziv potprograma LCDWR 
        addi a1,x0,0x56                         ; pripremi ascii vrijednost za V
        jal  ra, LCDWR                          ; poziv potprograma LCDWR

        beq  x0, x0, nas                        ; vrati se odrediti daljnje vrijednosti

za_V                                            ; za slovo V

        addi a1,x0,0x56                         ; pripremi ascii vrijednost za V
        jal  ra, LCDWR                          ; poziv potprograma LCDWR 

        beq  x0, x0, nas                        ; vrati se odrediti daljnje vrijednosti

za_IX                                           ; za slova IX

        addi a1,x0,0x49                         ; pripremi ascii vrijednost za I
        jal  ra, LCDWR                          ; poziv potprograma LCDWR 
        addi a1,x0,0x58                         ; pripremi ascii vrijednost za IX
        jal  ra, LCDWR                          ; poziv potprograma LCDWR

        beq  x0, x0, nas                        ; vrati se odrediti daljnje vrijednosti

za_X                                            ; za slovo X

        addi a1,x0,0x58                         ; pripremi ascii vrijednost za X
        jal  ra, LCDWR                          ; poziv potprograma LCDWR 

        beq  x0, x0, nas                        ; vrati se odrediti daljnje vrijednosti

za_XL                                           ; za slova XL

        addi a1,x0,0x58                         ; pripremi ascii vrijednost za X
        jal  ra, LCDWR                          ; poziv potprograma LCDWR 
        addi a1,x0,0x4C                         ; pripremi ascii vrijednost za L
        jal  ra, LCDWR                          ; poziv potprograma LCDWR

        beq  x0, x0, nas                        ; vrati se odrediti daljnje vrijednosti

za_L                                            ; za slovo L

        addi a1,x0,0x4C                         ; pripremi ascii vrijednost za L
        jal  ra, LCDWR                          ; poziv potprograma LCDWR 

        beq  x0, x0, nas                        ; vrati se odrediti daljnje vrijednosti

za_XC                                           ; za slova IX

        addi a1,x0,0x58                         ; pripremi ascii vrijednost za X
        jal  ra, LCDWR                          ; poziv potprograma LCDWR
        addi a1,x0,0x43                         ; pripremi ascii vrijednost za C
        jal  ra, LCDWR                          ; poziv potprograma LCDWR

        beq  x0, x0, nas                        ; vrati se odrediti daljnje vrijednosti

za_C                                            ; za slovo C
 
        addi a1,x0,0x43                         ; pripremi ascii vrijednost za C
        jal  ra, LCDWR                          ; poziv potprograma LCDWR

        beq  x0, x0, nas                        ; vrati se odrediti daljnje vrijednosti

lcdwr                                           ; potprogram za ispis na LCD prikaznik
        andi a1,a1,0x7F                         ; postavi bit 7 u nulu (za svaki slučaj, jer u R0 je tu mogla biti 1) i pošalji znak
        sb   a1, 4(s0)                          ; spremanje vrijednosti
        ori  a1,a1,0x80                         ; postavi bit 7 u jedan (podigni impuls)
        sb   a1, 4(s0)                          ; spremanje vrijednosti
        andi a1,a1,0x7F                         ; postavi bit 7 u nulu (spusti impuls)
        sb   a1, 4(s0)                          ; spremanje vrijednosti
        jalr x0, 0(ra)                          ; povratak

        org  0x500                              ; pozicioniranje na 0x500 u memoriji
POL     dw   0x40                               ; spremanje broja na tu poziciju u memoriji